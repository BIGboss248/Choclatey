# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  assertions:
    - resource: Microsoft.Windows.Developer/OsVersion
      directives:
        description: Verify min OS version requirement
        allowPrerelease: true
      settings:
        MinVersion: '10.0.22000'
  resources:
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.WSL
      # directives:
        # description:
      settings:
        # source: winget
        id: Microsoft.WSL
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Canonical.Ubuntu.2404
      # directives:
        # description:
      dependsOn:
        - Microsoft.WSL
      settings:
        # source: winget
        id: Canonical.Ubuntu.2404
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Docker.DockerDesktop
      # directives:
        # description:
      dependsOn:
        - Canonical.Ubuntu.2404
      settings:
        # source: winget
        id: Docker.DockerDesktop
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Python.Python.3.13
      # directives:
        # description:
      settings:
        # source: winget
        id: Python.Python.3.13
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: 7zip.7zip
      # directives:
        # description:
      settings:
        # source: winget
        id: 7zip.7zip
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Anydesk.Anydesk
      # directives:
        # description:
      settings:
        # source: winget
        id: Anydesk.Anydesk
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Git.Git
      # directives:
        # description:
      settings:
        # source: winget
        id: Git.Git
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.VisualStudioCode
      # directives:
        # description:
      settings:
        # source: winget
        id: Microsoft.VisualStudioCode
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Golang.Go
      # directives:
        # description:
      settings:
        # source: winget
        id: Golang.Go
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Google.Chrome
      # directives:
        # description:
      settings:
        # source: winget
        id: Google.Chrome
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: KaringX.Karing
      # directives:
        # description:
      settings:
        # source: winget
        id: KaringX.Karing
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.DotNet.AspNetCore.8
      # directives:
        # description:
      settings:
        # source: winget
        id: Microsoft.DotNet.AspNetCore.8
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: OpenJS.NodeJS
      # directives:
        # description:
      settings:
        # source: winget
        id: OpenJS.NodeJS
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Starship.Starship
      # directives:
        # description:
      settings:
        # source: winget
        id: Starship.Starship
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: VideoLAN.VLC
      # directives:
        # description:
      settings:
        # source: winget
        id: VideoLAN.VLC
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: WireGuard.WireGuard
      # directives:
        # description:
      settings:
        # source: winget
        id: WireGuard.WireGuard
  configurationVersion: 0.2.0
